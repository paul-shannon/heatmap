row1 <- I(for i in 1:3) {
row1
row1 = I(for in 1:3) {
row1 = I(for i in 1:3) {
row1 = I(for (i in 1:3) {
row1 = I(for (i in 1:3) {+ list[i] <- 
list[i] <- 
row1 <- I(for (i in 1:3) {
list[i] <- treeMtx[i,]})
row1 <- I(for (i in 1:3) {
row1[i] <- treeMtx[1,]})
I(for (i in 1:3) {
row1[i] <- treeMtx[1,]})
I(for (i in 1:3) {
row1[i] <- treeMtx[i,]})
row1 <- NULL
I(for (i in 1:3) {
row1[i] <- treeMtx[i,]})
treeMtx
colgroup
list(1,2,3)
I(list(1,2,3))
?I
class(I(list(1,2,3)))
treeMtx
for(i in 1:3) {
row1[i] <- treeMtx[i,]}
row1
row1 <- list()
for(i in 1:3) {
row1[i] <- treeMtx[i,]}
row1
ncol(treeMtx)
nrow(treeMtx)
rowgroup
treeMtx[1,]
class(treeMtx[1,])
row1 <- list()
row1[[1]] <- treeMtx[1,]
row1
for(i in 1:ncol(treeMtx)) {
row1[[i]] <- treeMtx[i,]}
row1
I(for(i in 1:ncol(treeMtx)) {
row1[[i]] <- treeMtx[i,]})
row1
row2 <- list()
I(for(i in 1:ncol(treeMtx)) {
row2[[i]] <- treeMtx[i,]})
row2
rowgroup
row2
row3 <- list()
row3 <- I(for(i in 1:ncol) {
row3[[i]] <- treeMtx[i,]})
row3
row3 <- I(for(i in 1:ncol(treeMtx)) {
row3[[i]] <- treeMtx[i,]})
row3
row3 <- I(for(i in 1:ncol(treeMtx)) {
list[[i]] <- treeMtx[i,]})
source("dataFrame.R")
dataFrame()
rowgroup
source("dataFrame.R")
dataFrame()
rowgroup
colgroup
source("dataFrame.R")
dataFrame()
rowgroup
source("dataFrame.R")
dataFrame()
rowgroup
colgroup
dataFrame()
source("dataFrame.R")
dataFrame()
w
w()
1
w
w()
source("dataFrame.R")
dataFrame()
w()
rowgroup
dataFrame()
source("dataFrame.R")
dataFrame()
w
rowgroup
w()
source("dataFrame.R")
source("dataFrame.R")
dataFrame()
w()
z <- list()
z <- I(list(treeMtx[1:ncol(treeMtx),]))
z
rowgroup
treeMtx
p <- list(0
p <- list(0
p <- list()
treeMtx(unlist(p), nrow=3, byrow=TRUE)
df <- data.frame(treeMtx(unlist(p), nrow=3, byrow=TRUE))
unlist(treeMtx)
source("dataFrame.R")
dataFrame()
rowgroup
class(rowgroup)
class(colgroup)
source("dataFrame.R")
source("dataFrame.R")
dataFrame()
source("dataFrame.R")
dataFrame()
row
rowFill
treeMtx2
source("dataFrame.R")
dataFrame()
w
w()
source("dataFrame.R")
dataFrame()
w()
q()
w()
source("dataFrame.R")
dataFrame()
print(dataFramejson)
k
hc1
hc1.length
hc2
treeMtx2
cutree(hc2, k=1:3)
cutree(hc2, k=1:4)
q()
source("dataFrame.R")
dataFrame()
cutree(hc1, k=1:11)
cutree(hc2, k=1:11)
hc2(elements)
elements(hc2)
class(hc2)
members(hc2)
cutree(hc2)
hc2
objects(hc2)
numberofobjects(hc2)
number(hc2)
distance(hc2)
objects(hc2)
objects(hc2).length
 class(hc2)
hc2(Number of objects)
class(dataFrame)
class(dataFrameRaw)
class(dataFramejson)
source("experiments/MyPackage/inst/unitTests/test_dataFrame.R")
source("..experiments/MyPackage/inst/unitTests/test_dataFrame.R")
q()
source("dataFrame.R")
USArrestsSmall()
source("dataFrame.R")
USArrestsSmall()
print(datFramejson)
toJSON(USArrestsSmall())
dbscan
iris
mtx <- iris
source("dataFrame.R")
matrixToClusterGrammer(mtx)
source("dataFrame.R")
matrixToClusterGrammer(mtx)
source("dataFrame.R")
matrixToClusterGrammer(mtx)
class(iris)
mtx <- as.matrix(iris)
matrixToClusterGrammer(mtx)
mtx
hclust(mtx)
hclust(dist(mtx))
t(mtx)
matrixToClusterGrammer(mtx)
q()
source("dataFrame.R")
source("dataFrame.R")
USArrestsSmall()
treeMtx
treeMtx2
source("dataFrame.R")
USArrestsSmall()
hc1$labels
hc1$order
source("dataFrame.R")
USArrestsSmall()
source("dataFrame.R")
USArrestsSmall()
source("dataFrame.R")
USArrestsSmall()
toJSON(USArrestsSmall())
hc2$labels
hc2$order
treeMtx2
toJSON(treeMtx)
toJSON(rev(treeMtx))
toJSON(treeMtx)
hc1$labels[hc1$order[1]]
hc1$labels[hc1$order]
toJSON(treeMtx)
toJSON(t(treeMtx))
treeMtx
x <- toJSON(treeMtx)
x
lapply(x, rev)
rev(list(1,2,3))
rev(c(1,2,3))
x
treeMtx
apply(treeMtx, 1, rev)
t(apply(treeMtx, 1, rev))
toJSON(t(apply(treeMtx, 1, rev)))
apply(treeMtx, 1, rev)
apply(t(treeMtx), 1, rev)
toJSON(t(apply(treeMtx, 1, rev)))
source("dataFrame.R")
USArrestsSmall()
source("dataFrame.R")
USArrestsSmall()
toJSON(USArrestsSmall())
hc2$labels[hc2$order]
hc2$labels
q()
source("dataFrame.R")
USArrestsSmall()
toJSON(USArrestsSmall())
source("dataFrame.R")
USArrestsSmall()
toJSON(USArrestsSmall())
source("dataFrame.R")
toJSON(USArrestsSmall())
hc1$order[hc1$labels]
hc1$order[hc1$labels[hc1$order]]
hc1$order[hc1$order]
source("dataFrame.R")
toJSON(USArrestsSmall())
hc2$order[hc2$order]
hc2$order
hc2$labels["Nevada"]
hc2$labels["Murder"]
hc2$labels
hc2$labels[Murder]
hc2$labels["Murder"]
hc2$labels[1]
hc2$labels$Murder
hc2$labels[hc2$order]
hc2$order[hc2$order]
hc2$order[hc2$order[hc2$order]]
hc1$order
hc1$order[hc1$order]
1:nrow(treeMtx)
1:nrow(treeMtx2)
source("dataFrame.R")
toJSON(USArrestsSmall())
source("dataFrame.R")
toJSON(USArrestsSmall())
source("dataFrame.R")
mtx <- as.matrix(USArrests)
toJSON(matrixToClusterGrammer())
toJSON(matrixToClusterGrammer(mtx))
source("dataFrame.R")
toJSON(matrixToClusterGrammer(mtx))
mtx <- as.matrix(USArrests)
toJSON(matrixToClusterGrammer(mtx))
USArrests
 USArrestsSmall()
source("dataFrame.R")
library(RUnit)
test_USArrestsSmall()
source("dataFrame.R")
test_USArrestsSmall()
source("dataFrame.R")
test_USArrestsSmall()
source("dataFrame.R")
test_USArrestsSmall()
source("dataFrame.R")
test_USArrestsSmall()
source("dataFrame.R")
test_USArrestsSmall()
source("dataFrame.R")
test_USArrestsSmall()
source("dataFrame.R")
test_USArrestsSmall()
source("dataFrame.R")
test_USArrestsSmall()
source("dataFrame.R")
test_USArrestsSmall()
source("dataFrame.R")
test_USArrestsSmall()
source("dataFrame.R")
test_USArrestsSmall()
source("dataFrame.R")
test_USArrestsSmall()
source("dataFrame.R")
test_USArrestsSmall()
source("dataFrame.R")
test_USArrestsSmall()
source("dataFrame.R")
test_USArrestsSmall()
source("dataFrame.R")
test_USArrestsSmall()
source("dataFrame.R")
test_USArrestsSmall()
source("dataFrame.R")
test_USArrestsSmall()
source("dataFrame.R")
test_USArrestsSmall()
test_USArrestsSmall()
test_USArrestsSmall()
source("dataFrame.R")
test_USArrestsSmall()
source("dataFrame.R")
test_USArrestsSmall()
source("dataFrame.R")
test_USArrestsSmall()
source("dataFrame.R")
test_USArrestsSmall()
source("dataFrame.R")
test_USArrestsSmall()
source("dataFrame.R")
test_USArrestsSmall()
source("dataFrame.R")
test_USArrestsSmall()
source("dataFrame.R")
test_USArrestsSmall()
$mat
source("dataFrame.R")
test_USArrestsSmall()
$mat
rawList$mat
dim(rawList$mat)
source("dataFrame.R")
c(1,2)
(3,4)
source("dataFrame.R")
test_USArrestsSmall()
source("dataFrame.R")
test_USArrestsSmall()
mat
set.seed(21)
A <- matrix(rnorm(50),10,5)
A[order(A[,1]),]
set.seed(21)
A <- mat
A[order(A[,1]),]
A[order(A[,1]),]
mat
A[order(A[1,]),]
A[,order(A[,1])]
?order
set.seed(13)
A[order(A[,1]),]
A[order(A[,3]),]
A[order(A[,2]),]
hc2$order
hc2$labels
mat
mtx
names(mat)
Murder(mat)
mat(Murder)
names(col_nodes)
col(mat)
mat[col]
colnames(mat)
colnames(mat) <- c(1:4)
mat
colnames(mat)
colnames(mat) <- hc2$order
mat
colnames(mat) <- c(1:4)
mat
mat[,c(1:4)] <- mat[,hc2$order]
mat
unname(mat, force=FALSE)
mat <- mat[hc1$order,]
mat
q()
c
source("dataFrame.R")
test_USArrestsSmall()
test_USArrestsSmall()
source("dataFrame.R")
test_USArrestsSmall()
source("dataFrame.R")
test_USArrestsSmall()
row_nodes
hc1$order
treeMtx[hc1$order]
treeMtx
treeMtx2
mtx
hclust(dist(mtx))
print(hclust(dist(mtx)))
cluster <- hclust(dist(mtx))
clust
cluster
cluster$order
cutree(cluster, k=1:3)
cutree(cluster, k=1:nrow(mtx))
cutree(cluster, k=1:nrow(mtx)<11)
cutree(cluster, k=1:nrow(mtx)<=11)
cutree(cluster, k=1:nrow(mtx)
)
for(i in 1:nrow(treeMtx)) {
k += 1 }
for(i in 1:nrow(treeMtx)) {
k = k + 1 }
k
k = 0
k
for(i in 1:nrow(treeMtx)) {
k = k + 1 }
k
for(i in 1:nrow(treeMtx)) {
if(nrow(treeMtx) < 10) {
k = k + 1
} }
k <- 0
k
for(i in 1:nrow(treeMtx)) {
if(nrow(treeMtx) < 10) {
k = k + 1
}}
for(i in nrow(treeMtx)) {
if(nrow(treeMtx) < 10) {
k = k + 1
}}
for(i in nrow(treeMtx)) {
if(nrow(treeMtx) < 10) {
printf("hello")
}}
for(i in nrow(treeMtx)) {
if(nrow(treeMtx) < 10)
printf("hello")
}}
for(i in nrow(treeMtx)) {
if(nrow(treeMtx) < 10)
printf("hello")
}
nrow(treeMtx)
for(i in nrow(treeMtx)) {
if(nrow(treeMtx) < 10)
printf("hello")
}
for(i in nrow(treeMtx)) {
if(nrow(treeMtx) = 3)

printf("hello")
}
w <- function() {
for(i in 1:nrow(treeMtx)) {
if(nrow(treeMtx) = 3)
for(i in 1:nrow(treeMtx)) {
if(nrow(treeMtx) = 3) printf("hello") }
for(i in 1:nrow(treeMtx)) {
if(1:nrow(treeMtx) = 3) printf("hello") }
c
c
c
c
c
c
c
source("dataFrame.R")
test_USArrestsSmall()
c
source("dataFrame.R")
test_USArrestsSmall()
source("dataFrame.R")
test_USArrestsSmall()
source("dataFrame.R")
test_matrixToClusterGrammer()
source("dataFrame.R")
test_matrixToClusterGrammer()
q()
?heatmap.2
?heatmap
?heatmap2
source("matrixCluster.R")
USArrestsSmall()
mtx <- as.matrix(USArrests)
matrixToClusterGrammer(mtx)
matrixToClusterGrammer(mtx)
test_BioMatrix()
q()
